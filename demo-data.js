// demo-data.js
const pool = require('./db');

async function insertDemoData() {
  try {
    // üîπ –î–æ–±–∞–≤–∏–º –æ–±—ã—á–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
    await pool.query(`
      INSERT INTO cities (name, country)
      VALUES 
        ('Tbilisi', 'Georgia'),
        ('Yerevan', 'Armenia'),
        ('Baku', 'Azerbaijan')
      ON CONFLICT DO NOTHING;
    `);

    // üîπ –î–æ–±–∞–≤–∏–º –ø–æ–≥–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –≥–æ—Ä–æ–¥–æ–≤ (–±–µ–∑ ATIS)
    await pool.query(`
      INSERT INTO weather_reports (city_id, temperature, wind)
      VALUES 
        (1, 21.5, '310¬∞ 3.1 m/s'),
        (2, 24.0, '280¬∞ 5.2 m/s'),
        (3, 28.7, '120¬∞ 4.0 m/s');
    `);

    // üîπ –î–æ–±–∞–≤–∏–º –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã c ICAO-–∫–æ–¥–∞–º–∏ –∏ ATIS-—Ç–µ–∫—Å—Ç–∞–º–∏ (—Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ)
    const airports = [
      {
        icao: 'KLAX', // Los Angeles
        atis: 'KLAX ATIS Information Alpha. Wind 270 at 5. Visibility 10. Clear skies...',
        country: 'USA',
      },
      {
        icao: 'KSEA', // Seattle
        atis: 'KSEA ATIS Information Bravo. Wind 250 at 4. Few clouds...',
        country: 'USA',
      },
    ];

    for (const { icao, atis, country } of airports) {
      // üèôÔ∏è –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç –∫–∞–∫ "–≥–æ—Ä–æ–¥"
      await pool.query(`
        INSERT INTO cities (name, country)
        VALUES ($1, $2)
        ON CONFLICT DO NOTHING;
      `, [icao, country]);

      // üîç –ù–∞—Ö–æ–¥–∏–º ID —ç—Ç–æ–≥–æ "–≥–æ—Ä–æ–¥–∞"
      const result = await pool.query(
          `SELECT id FROM cities WHERE name = $1`,
          [icao]
      );
      const cityId = result.rows[0]?.id;
      if (!cityId) continue;

      // ‚òÅÔ∏è –°–æ—Ö—Ä–∞–Ω—è–µ–º ATIS-–ø–æ–≥–æ–¥–Ω—É—é –∑–∞–ø–∏—Å—å
      await pool.query(`
        INSERT INTO weather_reports (city_id, temperature, wind, created_at, icao_code, atis_raw)
        VALUES ($1, null, null, NOW(), $2, $3);
      `, [cityId, icao, atis]);
    }

    console.log('‚úÖ Demo data inserted (—Å –≥–æ—Ä–æ–¥–∞–º–∏ –∏ ATIS)');
  } catch (err) {
    console.error('‚ùå Error inserting demo data:', err);
  } finally {
    await pool.end();
  }
}

insertDemoData();
